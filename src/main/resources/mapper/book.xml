<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookshop.dao.IBookDao">

    <resultMap id="bookResultMap" type="Book">
        <!-- 只能保证Book实体封装完成 -->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="bookType" column="bookType"/>
        <result property="price" column="price"/>
        <result property="originalPrice" column="originalPrice"/>
        <result property="author" column="author"/>
        <result property="press" column="press"/>
        <result property="version" column="version"/>
        <result property="degree" column="degree"/>
        <result property="publishDate" column="publishDate"/>
        <result property="description" column="description"/>
        <result property="date" column="date"/>
        <!-- property表示pojo的一个对象属性" javaType="上面pojo关联的pojo对象 -->
        <association property="user" javaType="User">
            <id property="id" column="uid"/>
            <result property="studentid" column="studentid"/>
            <result property="name" column="uname"/>
            <result property="password" column="password"/>
            <result property="sex" column="sex"/>
            <result property="tel" column="tel"/>
            <result property="address" column="address"/>
            <result property="major" column="major"/>
        </association>
        <association property="category" javaType="Category">
            <id property="id" column="cid"/>
            <result property="name" column="cname"/>
        </association>
    </resultMap>

    <!-- keyProperty用于获取自增的id -->
    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="Book" >
        insert into book
        (name, bookType, author, cid, originalPrice, price, press, publishDate, version, degree, description, uid,date)
        values
        (#{name}, #{bookType}, #{author}, #{category.id}, #{originalPrice}, #{price}, #{press}, #{publishDate}, #{version}, #{degree}, #{description}, #{user.id}, #{date})
    </insert>

    <delete id="delete" parameterType="java.lang.Integer" >
        delete from book where id= #{id}
    </delete>

    <select id="get" parameterType="java.lang.Integer" resultMap="bookResultMap">
        select b.*, u.major, u.address, u.name uname, u.password, u.sex, u.tel, u.studentid, c.name cname from book b
          left join
          user u on b.uid = u.id
          left join
          category c on b.cid = c.id  where b.id = #{id}
    </select>

    <update id="update" parameterType="Book" >
        update book set name=#{name}, cid=#{category.id}, originalPrice=#{originalPrice}, price=#{price},
                        press=#{press}, publishDate=#{publishDate}, version=#{version}, degree=#{degree}, description=#{description} where id=#{id}
    </update>

    <select id="getList" resultType="Book">
        select * from book
    </select>

    <select id="getListByBookType" resultType="Book">
        select * from book where bookType=#{bookType} order by date desc
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(id) from book
    </select>

    <!-- 面对多个参数，在Service中使用了@Param注解，所以这里不需要ParameterType -->
    <select id="getListByCategoryId"  resultMap="bookResultMap">
    <!-- 这种写法感觉有待改进 -->
        select b.*, u.major, u.address, u.name uname, u.password, u.sex, u.tel, u.studentid, c.name cname
         from book b , user u, category c
          where b.bookType = #{bookType} and b.cid = #{cid}
            and b.uid = u.id and b.cid = c.id order by b.date desc
        <if test="start != -1">
            limit #{start},#{count}
        </if>
    </select>

    <select id="getListByUserId" resultType="Book">
        select * from book where uid = #{uid} and bookType = #{bookType} order by date desc
    </select>

    <select id="getUserId" resultType="java.lang.Integer">
        select uid from book where id = #{id}
    </select>

</mapper>